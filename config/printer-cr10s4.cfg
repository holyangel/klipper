[include mainsail.cfg]
[include timelapse.cfg]

# host MCU service is preinstalled and ready to use with:
[mcu CB1]
serial: /tmp/klipper_host_mcu

# This file contains common pin mappings for the BIGTREETECH Manta E3EZ
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" "8 MHz crystal"
# and "USB (on PA11/PA12)" or "CAN bus (on PB12/PB13)".

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_55001A0017504D4D36343020-if00

# BTT Input Shaper
[mcu btt_adxl345]
serial: /dev/serial/by-id/usb-Klipper_rp2040_454741505405083A-if00  

[printer]
kinematics: cartesian
max_velocity: 196
max_accel: 512
max_z_velocity: 20
max_z_accel: 128

########################################
## Stepper Motors and Extruder
########################################
[stepper_x]
step_pin: PA14
dir_pin: !PA10
enable_pin: !PA13
rotation_distance: 40
full_steps_per_rotation: 200
homing_speed: 40
microsteps: 16
endstop_pin: ^PC4
position_endstop: -1
position_min: -1
position_max: 435
homing_retract_dist: 5

[stepper_y]
step_pin: PC8
dir_pin: !PA15
enable_pin: !PC14
rotation_distance: 40
full_steps_per_rotation: 200
homing_speed: 48
microsteps: 16
endstop_pin: ^PB0
position_endstop: -10
position_min: -10
position_max: 422
 
[stepper_z]
step_pin: PD2
dir_pin: !PD4
enable_pin: !PD3
rotation_distance: 8
full_steps_per_rotation: 200
homing_speed: 8 # reduced for better capacitive probe accuracy
homing_retract_speed: 15 # this is conservative: we need less, just enough to overcome mechanical backlash and probe hysteresis
second_homing_speed: 5
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_max: 363 # you can go higher but then the cables crimp
position_min: -6.0

[stepper_z1]
step_pin: PB7
dir_pin: !PB6
enable_pin: !PB4
rotation_distance: 8
full_steps_per_rotation: 200
microsteps: 16
endstop_pin: probe:z_virtual_endstop

[extruder]
step_pin: PD5
dir_pin: PD6
enable_pin: !PB3
rotation_distance: 22
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 1000.0
max_extrude_only_velocity: 70.0
max_extrude_only_accel: 1000.0
max_extrude_cross_section: 0.8
heater_pin: PB11 #HE0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA4 #TH0
control: pid
pid_Kp: 30.790
pid_Ki: 2.012
pid_Kd: 117.773
min_extrude_temp: 170
min_temp: 0
max_temp: 300
pressure_advance: 0.045
pressure_advance_smooth_time: 0.02

########################################
# Fans, Filament, and Temperature
########################################

#[filament_switch_sensor material_0]
#switch_pin: PC5

#[filament_switch_sensor material_1]
#switch_pin: PB1

[fan]
pin: PB14

[heater_fan Hotend]
pin: PB15
heater: extruder
heater_temp: 50.0

[controller_fan Board]
pin: PA8

[temperature_sensor mcu]
sensor_type: temperature_mcu

[temperature_sensor host]
sensor_type: temperature_host

########################################
# Bed
########################################

[heater_bed]
heater_pin: PB2 #HB
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA3 #TB
control: pid
pid_Kp: 382.52
pid_Ki: 28.47
pid_Kd: 1284.77
min_temp: 0
max_temp: 95

[verify_heater heater_bed]
heating_gain: 1
check_gain_time: 200

## BLTouch and Safe Z Settings
[bltouch]
sensor_pin: PA6
control_pin: PA7
pin_move_time: 0.680
stow_on_each_sample: True
probe_with_touch_mode: False
x_offset: -44
y_offset: -7
z_offset: 2.900
speed: 4.0
samples: 1
sample_retract_dist: 3.0

[safe_z_home]
home_xy_position: 244,207
speed: 80.0
z_hop: 15.0
z_hop_speed: 5.0

[bed_mesh]
speed: 120
horizontal_move_z: 10
mesh_min: 30, 30
mesh_max: 380, 380
probe_count: 7
mesh_pps: 2
algorithm: bicubic
move_check_distance: 5
split_delta_z: .025
fade_start: 1
fade_end: 10
fade_target: 0

[bed_mesh default]
version: 1
points:
	0.330000, 0.180000, 0.177500, 0.205000, 0.215000, 0.205000, 0.207500
	0.150000, 0.025000, 0.032500, 0.100000, 0.080000, 0.067500, 0.065000
	0.070000, -0.037500, -0.032500, 0.035000, 0.012500, 0.007500, 0.010000
	0.037500, -0.070000, -0.057500, 0.010000, -0.012500, -0.002500, -0.005000
	0.047500, -0.065000, -0.050000, 0.022500, 0.005000, 0.010000, 0.025000
	0.127500, 0.017500, 0.042500, 0.102500, 0.092500, 0.110000, 0.127500
	0.307500, 0.175000, 0.177500, 0.187500, 0.210000, 0.232500, 0.280000
x_count: 7
y_count: 7
mesh_x_pps: 2
mesh_y_pps: 2
algo: bicubic
tension: 0.2
min_x: 30.0
max_x: 379.98
min_y: 30.0
max_y: 379.98

[delayed_gcode bed_mesh_init]
initial_duration: .01
gcode:
  BED_MESH_PROFILE LOAD=default

[bed_screws]
screw1: 76, 378
screw2: 417,378
screw3: 417,38
screw4: 76,38

[z_tilt]
points:
    50,200
    400,200
z_positions:
    -25,0
    427,0
speed: 50.0

[screws_tilt_adjust]
screw1: 76, 378
screw1_name: Back Left
screw2: 417, 378
screw2_name: Back Right
screw3: 417, 38
screw3_name: Front Right
screw4: 76, 38
screw4_name: Front Left
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PB8
diag_pin: PC4
run_current: 0.800
stealthchop_threshold: 999999
interpolate: False
#driver_SGTHRS: 127

[tmc2209 stepper_y]
uart_pin: PC9
diag_pin: PB0
run_current: 0.900
stealthchop_threshold: 999999
interpolate: False
#driver_SGTHRS: 127

[tmc2209 stepper_z]
uart_pin: PD0
#diag_pin: PC6
run_current: 0.700
stealthchop_threshold: 999999
interpolate: False
#driver_SGTHRS: 127

[tmc2209 stepper_z1]
uart_pin: PB5
run_current: 0.700
stealthchop_threshold: 999999
interpolate: False
#driver_SGTHRS: 127

[tmc2209 extruder]
uart_pin: PD1
run_current: 0.850
stealthchop_threshold: 999999
interpolate: False
#driver_SGTHRS: 255

########################################
# Extra Board Stuff
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC1, EXP1_3=PC3, EXP1_5=PC0, EXP1_7=PA2, EXP1_9=<GND>,
    EXP1_2=PC2,  EXP1_4=<RST>, EXP1_6=PA0, EXP1_8=PA1, EXP1_10=<5V>

#[output_pin PS_ON]
#pin: PA9

#[output_pin pb9_pin]
#pin: PB9

#[neopixel my_neopixel]
#pin: PC7

[adxl345]
cs_pin: btt_adxl345:gpio9
#spi_bus: spi1a
spi_software_sclk_pin: btt_adxl345:gpio10
spi_software_mosi_pin: btt_adxl345:gpio11
spi_software_miso_pin: btt_adxl345:gpio8
axes_map: -x,-y,-z

[resonance_tester]
probe_points: 244, 207, 20
accel_chip: adxl345

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 39.0
shaper_type_y = mzv
shaper_freq_y = 28.0

#[display]
#lcd_type: st7920
#cs_pin: EXP1_7
#sclk_pin: EXP1_6
#sid_pin: EXP1_8
#encoder_pins: ^EXP1_5, ^EXP1_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

########################################
# Macros
########################################

###################
# Home
###################
[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

###################
# Start Print
###################
[gcode_macro START_PRINT]
gcode:
    {% if params.BED_TEMP|int > 0 and params.EXTRUDER_TEMP|int > 0 %}
        CLEAR_PAUSE
        M140 S{params.BED_TEMP}  # Start heating the bed
        M190 S{params.BED_TEMP}  # Wait for the bed to reach the target temperature
        M109 S{params.EXTRUDER_TEMP}  # Wait for the extruder to reach the target temperature
        CG28
        G28 Z  # Always home Z axis
        BED_MESH_PROFILE LOAD=default # Load the default bed mesh
    {% else %}
        M117 "Error: BED_TEMP or EXTRUDER_TEMP not defined!"
    {% endif %}

###################
# Pause and Resume Print with Custom Parameters
###################
[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
        #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

###################
# Resume Print
###################
[gcode_macro RESUME]
rename_existing: RESUME_BASE
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #RESETRGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        RESUME_BASE                                                                  ; resume print
    {% endif %}

###################
# Stop Print
###################
[gcode_macro STOP_PRINT]
gcode:
    M104 S0  # Cool down hotend to prevent oozing
    G1 E-1 F600  # Retract filament
    G91  # Set to relative positioning
    G1 Z10 F300  # Move Z up 10mm to avoid scraping the print
    G28 X  # Home X axis
    G90  # Set to absolute positioning
    M140 S0  # Turn off bed heater
    TURN_OFF_HEATERS
    G1 Y300 F700  # Move Y axis forward for easier print removal
    M106 S255 # Turn on fan to cool down the hotend
    G4 S60  # Wait 60 seconds
    M106 S0  # Turn off fan
    M117 Print complete, remove the object.

###################
# Cancel Print
###################
[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    STOP_PRINT
    CANCEL_PRINT_BASE

###################
# Park front center
###################
[gcode_macro PARKFRONT]
gcode:
    CG28                              ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F6000        
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
###################
# Unload Filament
###################
[gcode_macro UNLOAD_FILAMENT]
gcode:
    PARKFRONT
    M104 S220  # Preheat hotend to a suitable unloading temperature
    M109 S220  # Wait for the hotend to reach the set temperature
    G1 E-100 F{params.speed_unload|default(600)}  # Rapidly retract filament to unload, default speed 600mm/min

###################
# Load Filament
###################
[gcode_macro LOAD_FILAMENT]
gcode:
    PARKFRONT
    M104 S220  # Preheat hotend to a suitable loading temperature
    M109 S220  # Wait for the hotend to reach the set temperature
    G1 E100 F{params.speed_load|default(300)}  # Slowly extrude filament to load, default speed 300mm/min

###################
# Clean Nozzle
###################
[gcode_macro CLEAN_NOZZLE]
gcode:
    G28  # Home all axes to ensure the nozzle is correctly positioned
    G1 X10 Y10 Z0.2  # Move to a specific position for cleaning
    G1 E10 F200  # Extrude a small amount of filament to help clean the nozzle
    G92 E0  # Reset the extruder position

###################
# Filament Change (M600)
###################
[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91 # Set to relative positioning
    G1 E-.8 F2700  # Retract a bit of filament quickly
    G1 Z{params.Z|default(10)}  # Raise the nozzle, default raise 10mm
    G90 # Set to absolute positioning
    G1 X{params.X|default(50)} Y{params.Y|default(0)} F3000  # Move to the specified position, default X=50, Y=0
    G91 # Set back to relative positioning
    G1 E-50 F1000  # Retract more filament to fully unload
    RESTORE_GCODE_STATE NAME=M600_state

###################
# Enable Object Exclusion (M486)
###################
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

###################
# Override M109
###################
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    {% if s != 0 %}
        M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}       ; Wait for hotend temp (within 1 degree)
    {% endif %}
    
###################
# Override M117 command with rawparams
###################
# The macro below will override the default M117 command to echo the message.
#
# It uses the rawparams pseudo-variable that contains the full unparsed
# parameters that was passed to the M117 command.
#
# As this can include comments, we are trimming the text when a `;` or `#` is
# found, and escaping any existing `"`

[gcode_macro M117]
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}

###################
# Support SDCard looping
###################
[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[sdcard_loop]

# 'Marlin' style M808 compatibility macro for SDCard looping
[gcode_macro M808]
gcode:
    {% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
    {% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
    {% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}


################################################################################